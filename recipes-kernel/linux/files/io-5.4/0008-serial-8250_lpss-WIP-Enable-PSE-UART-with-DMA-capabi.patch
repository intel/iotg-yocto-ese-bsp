From 8dc92c11fc96238bbbfad7ba19161294f9e59fd7 Mon Sep 17 00:00:00 2001
From: Raymond Tan <raymond.tan@intel.com>
Date: Thu, 28 May 2020 03:11:23 +0800
Subject: [PATCH 8/8] serial: 8250_lpss: WIP: Enable PSE UART with DMA
 capability

This patch enabled PSE UART with DMA support. At the moment, we
do not check for DMA engine availability like the other PCI-based
DMA controllers, and expecting channel request to fail during
serial8250_do_start(), thus falling back to PIO.

Signed-off-by: Raymond Tan <raymond.tan@intel.com>
---
 drivers/tty/serial/8250/8250_lpss.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/drivers/tty/serial/8250/8250_lpss.c b/drivers/tty/serial/8250/8250_lpss.c
index 05d41db..47ad2e5 100644
--- a/drivers/tty/serial/8250/8250_lpss.c
+++ b/drivers/tty/serial/8250/8250_lpss.c
@@ -180,6 +180,14 @@ static int byt_serial_setup(struct lpss8250 *lpss, struct uart_port *port)
 
 static int ehl_serial_setup(struct lpss8250 *lpss, struct uart_port *port)
 {
+	struct dw_dma_slave *param = &lpss->dma_param;
+	struct pci_dev *pdev = to_pci_dev(port->dev);
+
+	param->src_id = 0;
+	param->dst_id = 1;
+	param->dma_dev = &pdev->dev;
+	lpss->dma_maxburst = 8;
+
 	return 0;
 }
 
@@ -277,6 +285,8 @@ static int lpss8250_dma_setup(struct lpss8250 *lpss, struct uart_8250_port *port
 	if (!lpss->dma_param.dma_dev)
 		return 0;
 
+	pr_info("%s Enabling DMA for device %s, channel request happened during PORT is opened", __func__, dev_name(dev));
+
 	rx_param = devm_kzalloc(dev, sizeof(*rx_param), GFP_KERNEL);
 	if (!rx_param)
 		return -ENOMEM;
-- 
2.7.4

