From 4d15c2f2ad19e5b3a6e739c86c451fbfcaba4b33 Mon Sep 17 00:00:00 2001
From: Jian Sun <jian.sun@intel.com>
Date: Wed, 10 Jun 2020 07:52:43 +0800
Subject: [PATCH] WA for GUNIT IOMMU silicon bug

Avoid disabling TE during S3 or S4 entry based on PCI
header fixup.

This is a temporary workaround until official fix from
IOMMU driver is ready.
---
 drivers/iommu/intel-iommu.c | 36 +++++++++++++++++++++++++++++++++++-
 1 file changed, 35 insertions(+), 1 deletion(-)

diff --git a/drivers/iommu/intel-iommu.c b/drivers/iommu/intel-iommu.c
index 773ac2b0d606..b993550bdea0 100644
--- a/drivers/iommu/intel-iommu.c
+++ b/drivers/iommu/intel-iommu.c
@@ -367,6 +367,7 @@ static int intel_iommu_strict;
 static int intel_iommu_superpage = 1;
 static int iommu_identity_mapping;
 static int intel_no_bounce;
+static int dmar_te_no_dis;
 
 #define IDENTMAP_ALL		1
 #define IDENTMAP_GFX		2
@@ -4229,7 +4230,8 @@ static int iommu_suspend(void)
 	iommu_flush_all();
 
 	for_each_active_iommu(iommu, drhd) {
-		iommu_disable_translation(iommu);
+		if(!dmar_te_no_dis)
+			iommu_disable_translation(iommu);
 
 		raw_spin_lock_irqsave(&iommu->register_lock, flag);
 
@@ -6071,6 +6073,38 @@ DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x0044, quirk_calpella_no_shadow_g
 DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x0062, quirk_calpella_no_shadow_gtt);
 DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x006a, quirk_calpella_no_shadow_gtt);
 
+static void quirk_iommu_te(struct pci_dev *dev)
+{
+	pci_info(dev, "Do not perform IOMMU TE disabling in pm flow\n");
+	dmar_te_no_dis = 1;
+}
+
+/* EHL TE quirk */
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4500, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4510, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4512, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4514, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4516, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4518, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x451A, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x451C, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x451E, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4522, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4524, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4526, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4528, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x452A, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x452C, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x452E, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4530, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4532, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4534, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4536, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x4538, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x453A, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x453C, quirk_iommu_te);
+DECLARE_PCI_FIXUP_HEADER(PCI_VENDOR_ID_INTEL, 0x453E, quirk_iommu_te);
+
 /* On Tylersburg chipsets, some BIOSes have been known to enable the
    ISOCH DMAR unit for the Azalia sound device, but not give it any
    TLB entries, which causes it to deadlock. Check for that.  We do
-- 
2.17.1

