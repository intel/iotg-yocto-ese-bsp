From 92d4a87f5c5f30749e775621e83e029917cb5f7a Mon Sep 17 00:00:00 2001
From: Pandith N <pandith.n@intel.com>
Date: Sat, 11 Jul 2020 13:58:15 +0530
Subject: [PATCH 1/1] Calling power management calls without entering critical
 section

Signed-off-by: Pandith N <pandith.n@intel.com>
---
 drivers/ptp/ptp-intel-tgpio-plat.c | 24 ++++++++++++++----------
 1 file changed, 14 insertions(+), 10 deletions(-)

diff --git a/drivers/ptp/ptp-intel-tgpio-plat.c b/drivers/ptp/ptp-intel-tgpio-plat.c
index 5d2ce221d914..02871f0aba71 100644
--- a/drivers/ptp/ptp-intel-tgpio-plat.c
+++ b/drivers/ptp/ptp-intel-tgpio-plat.c
@@ -320,10 +320,6 @@ static int intel_tgpio_config_input(struct intel_tgpio *tgpio,
 	u32			offset;
 	u32			ctrl;
 
-	/* +1 reference if pin OFF -> ON */
-	if (!tgpio->pin_state[index] && on)
-		pm_runtime_get_sync(tgpio->dev->parent);
-
 	offset = TGPIOCTL(index);
 	ctrl = intel_tgpio_readl(tgpio->base, offset);
 	ctrl &= ~(TGPIOCTL_TS | TGPIOCTL_EP | TGPIOCTL_DIR | TGPIOCTL_PWS | TGPIOCTL_IEC_EC | TGPIOCTL_ICS);
@@ -394,10 +390,6 @@ static int intel_tgpio_config_output(struct intel_tgpio *tgpio,
 	u32			offset;
 	u32			ctrl;
 
-	/* +1 reference if pin OFF -> ON */
-	if (!tgpio->pin_state[index] && on)
-		pm_runtime_get_sync(tgpio->dev->parent);
-
 	offset = TGPIOCTL(index);
 	ctrl = intel_tgpio_readl(tgpio->base, offset);
 	ctrl &= ~(TGPIOCTL_TS | TGPIOCTL_EP | TGPIOCTL_DIR | TGPIOCTL_PWS  | TGPIOCTL_IEC_EC | TGPIOCTL_ICS);
@@ -453,18 +445,30 @@ static int intel_tgpio_enable(struct ptp_clock_info *info,
 	unsigned long		flags;
 	int			ret = -EOPNOTSUPP;
 
-	spin_lock_irqsave(&tgpio->lock, flags);
 	switch (req->type) {
 	case PTP_CLK_REQ_EXTTS:
+	{
+		if (!tgpio->pin_state[req->extts.index] && on)
+			pm_runtime_get_sync(tgpio->dev->parent);
+
+		spin_lock_irqsave(&tgpio->lock, flags);
 		ret = intel_tgpio_config_input(tgpio, &req->extts, on);
+		spin_unlock_irqrestore(&tgpio->lock, flags);
 		break;
+	}
 	case PTP_CLK_REQ_PEROUT:
+	{
+		if (!tgpio->pin_state[req->extts.index] && on)
+			pm_runtime_get_sync(tgpio->dev->parent);
+
+		spin_lock_irqsave(&tgpio->lock, flags);
 		ret = intel_tgpio_config_output(tgpio, &req->perout, on);
+		spin_unlock_irqrestore(&tgpio->lock, flags);
 		break;
+	}
 	default:
 		break;
 	}
-	spin_unlock_irqrestore(&tgpio->lock, flags);
 
 	return ret;
 }
-- 
2.17.1

