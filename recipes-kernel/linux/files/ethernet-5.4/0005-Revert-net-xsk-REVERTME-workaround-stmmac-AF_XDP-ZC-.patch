From 0c25c7f4f1afa61f70b101d5c12e7f3528d7988a Mon Sep 17 00:00:00 2001
From: "Wong, Vincent Por Yin" <vincent.por.yin.wong@intel.com>
Date: Thu, 9 Apr 2020 15:07:30 +0800
Subject: [PATCH 5/8] Revert "net: xsk: REVERTME: workaround stmmac AF_XDP ZC
 RX duplicate & loss"

This reverts commit 30799cb6776f613559f324ce33cc93fbffb44093.
---
 net/xdp/xsk_queue.h | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/net/xdp/xsk_queue.h b/net/xdp/xsk_queue.h
index 0f853ebb50ae..eddae4688862 100644
--- a/net/xdp/xsk_queue.h
+++ b/net/xdp/xsk_queue.h
@@ -178,12 +178,7 @@ static inline u64 *xskq_validate_addr(struct xsk_queue *q, u64 *addr,
 		struct xdp_umem_ring *ring = (struct xdp_umem_ring *)q->ring;
 		unsigned int idx = q->cons_tail & q->ring_mask;
 
-		/* WORKAROUND for stmmac AF_XDP Zero-Copy rx-path:
-		 * This enables the driver to map the dynamic dma_addresses
-		 * correctly as otherwise all packets will use a single
-		 * dma_address, causing packet duplication/losses
-		 */
-		*addr = (idx * 4096) & q->chunk_mask;
+		*addr = READ_ONCE(ring->desc[idx]) & q->chunk_mask;
 
 		if (umem->flags & XDP_UMEM_UNALIGNED_CHUNK_FLAG) {
 			if (xskq_is_valid_addr_unaligned(q, *addr,
-- 
2.17.1

