From 4c323b10503b64270e1777ba259b622595761e88 Mon Sep 17 00:00:00 2001
From: "Wong, Vee Khee" <vee.khee.wong@intel.com>
Date: Tue, 17 Mar 2020 13:22:35 +0800
Subject: [PATCH 3/6] net: stmmac: REVERTME: WA for incorrect ART-TSC
 conversion on TGL A2

On IoTG Tigerlake Internal MCP A2 stepping, the ART value that is read
from the MDIO adhoc register is half of TSC value returned from CPU
instruction rdtsc. This will cause crosstimestamping software stacks to
 fail.

This patch adjust the incorrect value specifically for Tigerlake
platform with IoTG Internal MCP A2 stepping only and does not apply to
other Tigerlake stepping.

Signed-off-by: Wong, Vee Khee <vee.khee.wong@intel.com>
---
 .../net/ethernet/stmicro/stmmac/stmmac_ptp.c   | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c
index 1b29ba6f5efd..c514ce293ca3 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_ptp.c
@@ -11,6 +11,7 @@
 #include "stmmac_ptp.h"
 #include "dwmac4.h"
 #include <linux/iopoll.h>
+#include <asm/intel-family.h>
 
 /**
  * stmmac_adjust_freq
@@ -214,6 +215,8 @@ static int stmmac_get_syncdevicetime(ktime_t *device,
 	struct stmmac_priv *priv = (struct stmmac_priv *)ctx;
 	void __iomem *ptpaddr = priv->ptpaddr;
 	void __iomem *ioaddr = priv->hw->pcsr;
+	unsigned int ebx_numerator;
+	unsigned int unused[3];
 	unsigned long flags;
 	u32 num_snapshot;
 	u32 gpio_value;
@@ -288,8 +291,21 @@ static int stmmac_get_syncdevicetime(ktime_t *device,
 	 * compared to the PMC ART, so we will need to perform a multiplication
 	 * to match the PMC ART frequency.
 	 */
-	if (priv->plat->is_pse)
+	if (priv->plat->is_pse) {
 		system->cycles *= priv->plat->pmc_art_to_pse_art_ratio;
+		return 0;
+	}
+
+	/* [REVERTME] Workaround: TigerLake Internal MCP A2 stepping has ART
+	 * value of 0.5x of actual ART. As it has same CPU family and model as
+	 * the rest of the TigerLak CPU skus, we can only differentiate them
+	 * using numerator value define in CPUID Leaf 15H. Note that this
+	 * workaround is not required for Tigerlake Internal MCP A6 stepping.
+	 */
+	cpuid(0x15, unused, &ebx_numerator, unused + 1, unused + 2);
+	if (boot_cpu_data.x86_model == INTEL_FAM6_TIGERLAKE_L &&
+	    ebx_numerator == 0x5e)
+		system->cycles *= 2;
 
 	return 0;
 }
-- 
2.17.1

