From a9f3963c5b4ed6bf329c4b8f0967dbf9dd7df5ca Mon Sep 17 00:00:00 2001
From: Voon Weifeng <weifeng.voon@intel.com>
Date: Fri, 5 Jun 2020 11:20:01 +0800
Subject: [PATCH 15/77] net: stmmac: remove checking of mtl rx queue overflow

Rx descriptor replenishment should be done in stmmac_rx_refill().
Hence, we should not adjust the descriptor tail pointer when
mtl rx queue overflow interrupt triggers.
Removing the whole mtl rx queue overflow detection flow as no action
required.

Signed-off-by: Voon Weifeng <weifeng.voon@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c | 11 -----------
 1 file changed, 11 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 4e72bc51ea04..92faf7ab2d44 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -5253,7 +5253,6 @@ static irqreturn_t stmmac_msi_intr_rx(int irq, void *data)
 	struct stmmac_rx_queue *rx_q = (struct stmmac_rx_queue *)data;
 	int chan = rx_q->queue_index;
 	struct stmmac_priv *priv;
-	int mtl_status;
 
 	priv = container_of(rx_q, struct stmmac_priv, rx_queue[chan]);
 
@@ -5266,16 +5265,6 @@ static irqreturn_t stmmac_msi_intr_rx(int irq, void *data)
 	if (test_bit(STMMAC_DOWN, &priv->state))
 		return IRQ_HANDLED;
 
-	mtl_status = stmmac_host_mtl_irq_status(priv, priv->hw,
-						chan);
-
-	if (mtl_status & CORE_IRQ_MTL_RX_OVERFLOW) {
-		stmmac_set_rx_tail_ptr(priv, priv->ioaddr,
-				       rx_q->rx_tail_addr,
-				       chan);
-		return IRQ_HANDLED;
-	}
-
 	if (rx_q->xsk_umem && priv->xdp_prog) {
 		int status = stmmac_dma_interrupt_status(priv, priv->ioaddr,
 							 &priv->xstats,
-- 
2.17.0

