From 61ce6ca34c352386c2c0e8e3a540175b2164e93c Mon Sep 17 00:00:00 2001
From: Ong Boon Leong <boon.leong.ong@intel.com>
Date: Thu, 28 May 2020 09:04:04 +0800
Subject: [PATCH 72/77] net: stmmac: disable stmmac_rx_zc() processing in RX
 ISR

Don't run stmmac_rx_zc() within the ISR, rely on NAPI to call upon it.

Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
---
 .../net/ethernet/stmicro/stmmac/stmmac_main.c | 21 +------------------
 1 file changed, 1 insertion(+), 20 deletions(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 132bd748aa7f..616ad2ed1476 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -5407,26 +5407,7 @@ static irqreturn_t stmmac_msi_intr_rx(int irq, void *data)
 	if (test_bit(STMMAC_DOWN, priv->state))
 		return IRQ_HANDLED;
 
-	if (rx_q->xsk_umem && priv->xdp_prog) {
-		int status = stmmac_dma_interrupt_status(priv, priv->ioaddr,
-							 &priv->xstats,
-							 chan,
-							 DMA_DIR_RX);
-
-		if ((status & handle_rx) &&
-		    chan < priv->plat->num_queue_pairs) {
-			/* Skip napi for XDP ZC queues to reduce latency.
-			 * Penalties of not using NAPI should be minimal for
-			 * XDP's case. Alternatively, users can increase the Rx
-			 * interrupt coalesce.
-			 */
-			stmmac_disable_dma_irq(priv, priv->ioaddr, chan, 1, 0);
-			stmmac_rx_zc(priv, priv->dma_rx_size, chan);
-			stmmac_enable_dma_irq(priv, priv->ioaddr, chan, 1, 0);
-		}
-	} else {
-		stmmac_napi_check(priv, chan, DMA_DIR_RX);
-	}
+	stmmac_napi_check(priv, chan, DMA_DIR_RX);
 
 	return IRQ_HANDLED;
 }
-- 
2.17.0

