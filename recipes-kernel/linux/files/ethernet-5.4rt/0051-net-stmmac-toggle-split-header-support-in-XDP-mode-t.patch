From 01d00f82d703fecfc36422d0bb9dcf32fa1e4856 Mon Sep 17 00:00:00 2001
From: Ong Boon Leong <boon.leong.ong@intel.com>
Date: Thu, 28 May 2020 22:00:21 +0800
Subject: [PATCH 51/77] net: stmmac: toggle split header support in XDP mode
 transition

Split header feature splits header and payload into two different
frame buffers associated with RX descriptor.

For RX XDP ZC, the mapping of UMEM is 1:1 to RX descriptor and does
not support splitting header and payload now.

Signed-off-by: Ong Boon Leong <boon.leong.ong@intel.com>
---
 .../net/ethernet/stmicro/stmmac/stmmac_main.c   | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 29b82a763f93..d97128e36960 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -5695,6 +5695,21 @@ static void stmmac_txrx_ch_init(struct stmmac_priv *priv, u16 qid)
 			       xdp_q->queue_index);
 }
 
+static void stmmac_sph_control(struct stmmac_priv *priv, u16 qid)
+{
+	struct stmmac_rx_queue *rx_q = &priv->rx_queue[qid];
+
+	/* RX XDP ZC does not support split header */
+	if (priv->sph && priv->hw->rx_csum > 0) {
+		if (rx_q->xsk_umem)
+			stmmac_enable_sph(priv, priv->ioaddr, false, qid);
+		else
+			stmmac_enable_sph(priv, priv->ioaddr, true, qid);
+	} else {
+		stmmac_enable_sph(priv, priv->ioaddr, false, qid);
+	}
+}
+
 /**
  * stmmac_queue_pair_enable - Enables a queue pair
  * @priv: driver private structure
@@ -5729,6 +5744,8 @@ int stmmac_queue_pair_enable(struct stmmac_priv *priv, u16 qid)
 
 	stmmac_txrx_desc_control(priv, qid, true);
 	stmmac_txrx_ch_init(priv, qid);
+	stmmac_sph_control(priv, qid);
+
 	stmmac_txrx_dma_control(priv, qid, true);
 
 	ret = stmmac_txrx_irq_control(priv, qid, true);
-- 
2.17.0

