From e92273b6247cfcfabedb24d15929955242fe70cb Mon Sep 17 00:00:00 2001
From: "Song, Yoong Siang" <yoong.siang.song@intel.com>
Date: Tue, 1 Sep 2020 21:10:12 +0800
Subject: [PATCH 5/5] net: stmmac: Do not restart aneg in common resume
 function

Restart auto negotiation is not required for Network Proxy use case.
Therefore, perform phy_restart_aneg() in stmmac_resume_main() function,
instead of stmmac_resume_common() function.

Signed-off-by: Song, Yoong Siang <yoong.siang.song@intel.com>
---
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index 567b9df..f9142c4 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -7270,7 +7270,6 @@ int stmmac_resume_common(struct stmmac_priv *priv, struct net_device *ndev)
 
 	if (ndev->phydev && device_may_wakeup(priv->device)) {
 		phy_start_machine(ndev->phydev);
-		phy_restart_aneg(ndev->phydev);
 	}
 
 	return 0;
@@ -7319,6 +7318,9 @@ int stmmac_resume_main(struct stmmac_priv *priv, struct net_device *ndev)
 		rtnl_lock();
 		phylink_start(priv->phylink);
 		rtnl_unlock();
+	} else {
+		if (ndev->phydev)
+			phy_restart_aneg(ndev->phydev);
 	}
 
 	phylink_mac_change(priv->phylink, true);
-- 
2.7.4

